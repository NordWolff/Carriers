variables:
  BASEVERSION: 1.0.1
  VERSION: ${BASEVERSION}.${CI_PIPELINE_ID}.${CI_COMMIT_BRANCH}
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  #MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  # MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"

include:
 - template: Security/SAST.gitlab-ci.yml
 - project: 'cicd-hub/cicd_training_base/hands-on-ws-template/pipeline_training_manual'
   file: 'build_handout.yml'

extends:
    - .defaultRunner
  image: $DEFAULT_DEPLOYER_IMAGE
  stage: create_mvn_set
  script:
    - |
      cat > settings.xml << EOF
      <?xml version="1.0" encoding="UTF-8"?>
      <settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.1.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <servers>
          <server>
            <username>${JFROG_USER}</username>
            <password>${JFROG_TOKEN}</password>
            <id>central</id>
          </server>
          <server>
            <username>${JFROG_USER}</username>
            <password>${JFROG_TOKEN}</password>
            <id>snapshots</id>
          </server>
        </servers>
        <profiles>
          <profile>
            <repositories>
              <repository>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
                <id>central</id>
                <name>vms-maven-virtual</name>
                <url>https://artifactory.devops.telekom.de/artifactory/vms-maven-virtual</url>
              </repository>
              <repository>
                <snapshots />
                <id>snapshots</id>
                <name>vms-maven-virtual</name>
                <url>https://artifactory.devops.telekom.de/artifactory/vms-maven-virtual</url>
              </repository>
            </repositories>
            <pluginRepositories>
              <pluginRepository>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
                <id>central</id>
                <name>vms-maven-virtual</name>
                <url>https://artifactory.devops.telekom.de/artifactory/vms-maven-virtual</url>
              </pluginRepository>
              <pluginRepository>
                <snapshots />
                <id>snapshots</id>
                <name>vms-maven-virtual</name>
                <url>https://artifactory.devops.telekom.de/artifactory/vms-maven-virtual</url>
              </pluginRepository>
            </pluginRepositories>
            <id>artifactory</id>
          </profile>
        </profiles>
        <activeProfiles>
          <activeProfile>artifactory</activeProfile>
        </activeProfiles>
      </settings>
      EOF
  artifacts:
    paths:
      - settings.xml
    expire_in: 1 hour


